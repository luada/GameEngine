#ifndef __PREREQUEST_H__
#define __PREREQUEST_H__

#include "Platform.h"

#if COMPILER == COMPILER_MSVC
#	ifndef _CRT_SECURE_NO_WARNINGS
#		define _CRT_SECURE_NO_WARNINGS
#	endif
#endif

#define DEFINE_VERSION(major, minor, patch) ((major << 16) | (minor << 8) | patch)

#ifndef DONT_REPLACE_NULLPTR
	#if COMPILER == COMPILER_MSVC
		#ifndef _MANAGED
			#define nullptr 0
		#endif
	#else
		#define nullptr 0
	#endif
#endif

namespace GUI
{

	class Gui;
	class IWidgetCreator;

	// managers
	class LogManager;
	class InputManager;
	class SubWidgetManager;
	class LayerManager;
	class SkinManager;
	class WidgetManager;
	class FontManager;
	class ControllerManager;
	class PointerManager;
	class ClipboardManager;
	class LayoutManager;
	class PluginManager;
	class DynLibManager;
	class LanguageManager;
	class ResourceManager;
	class RenderManager;
	class FactoryManager;
	class TextureManager;

	class IWidgetFactory;

	class DynLib;

	namespace factory
	{
		template <typename T>
		class BaseWidgetFactory;
	}

	class Widget;
	class Button;
	class Window;
	class List;
	class HScroll;
	class VScroll;
	class Edit;
	class ComboBox;
	class StaticText;
	class Tab;
	class TabItem;
	class Progress;
	class ItemBox;
	class MultiList;
	class StaticImage;
	class Message;
	class MenuCtrl;
	class MenuItem;
	class PopupMenu;
	class MenuBar;
	class ScrollView;
	class DDContainer;
	class Canvas;
	class ListCtrl;
	class ListBox;

	typedef Widget* WidgetPtr;
	typedef Button* ButtonPtr;
	typedef Window* WindowPtr;
	typedef List* ListPtr;
	typedef HScroll* HScrollPtr;
	typedef VScroll* VScrollPtr;
	typedef Edit* EditPtr;
	typedef ComboBox* ComboBoxPtr;
	typedef StaticText* StaticTextPtr;
	typedef Tab* TabPtr;
	typedef TabItem* TabItemPtr;
	typedef Progress* ProgressPtr;
	typedef ItemBox* ItemBoxPtr;
	typedef MultiList* MultiListPtr;
	typedef StaticImage* StaticImagePtr;
	typedef Message* MessagePtr;
	typedef MenuCtrl* MenuCtrlPtr;
	typedef MenuItem* MenuItemPtr;
	typedef PopupMenu* PopupMenuPtr;
	typedef MenuBar* MenuBarPtr;
	typedef ScrollView* ScrollViewPtr;
	typedef DDContainer* DDContainerPtr;
	typedef Canvas* CanvasPtr;
	typedef ListCtrl* ListCtrlPtr;
	typedef ListBox* ListBoxPtr;

	// Define version
    #define VERSION_MAJOR 3
    #define VERSION_MINOR 0
    #define VERSION_PATCH 1

    #define VERSION    DEFINE_VERSION(VERSION_MAJOR, VERSION_MINOR, VERSION_PATCH)

	// Disable warnings for MSVC compiler
#if COMPILER == COMPILER_MSVC

// Turn off warnings generated by long std templates
// This warns about truncation to 255 characters in debug/browse info
#   pragma warning (disable : 4786)

// Turn off warnings generated by long std templates
// This warns about truncation to 255 characters in debug/browse info
#   pragma warning (disable : 4503)

// disable: "conversion from 'double' to 'float', possible loss of data
#   pragma warning (disable : 4244)

// disable: "truncation from 'double' to 'float'
#   pragma warning (disable : 4305)

// disable: "<type> needs to have dll-interface to be used by clients'
// Happens on STL member variables which are not public therefore is ok
#   pragma warning (disable : 4251)

// disable: "non dll-interface class used as base for dll-interface class"
// Happens when deriving from Singleton because bug in compiler ignores
// template GUI_EXPORT
#   pragma warning (disable : 4275)

// disable: "C++ Exception Specification ignored"
// This is because MSVC 6 did not implement all the C++ exception
// specifications in the ANSI C++ draft.
#   pragma warning(disable : 4290)

// disable: "no suitable definition provided for explicit template
// instantiation request" Occurs in VC7 for no justifiable reason on all
// #includes of Singleton
#   pragma warning(disable: 4661)

#endif

} // namespace GUI

#endif // __PREREQUEST_H__
