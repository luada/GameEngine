//This file is created by AutoWrapLua.exe

$#include "Prerequest.h"
$#include "Widget.h"
$#include "Any.h"
$#include "EventPair.h"
$#include "ControllerFadeAlpha.h"

namespace GUI
{

	class Tab : public Widget
	{
	public:
		void SetPosition(int left, int top);

		void SetSize(int width, int height);

		void SetCoord(int left, int top, int width, int height);

		size_t GetItemCount() const;

		TabItem* InsertItem(size_t index, const UString& name, Widget* value);

		TabItem* InsertItemEx(TabItem* to, const UString& name, Widget* value);

		TabItem* AppendItem(const UString& name, Widget* value);

		void RemoveItem(size_t index);

		void RemoveItem(TabItem* item);

		void RemoveAllItems();

		TabItem* GetItem(size_t index);

		size_t GetItemIndex(TabItem* item);

		size_t FindItemIndex(TabItem* item);

		size_t FindItemIndexWith(const UString& name);

		TabItem* FindItemWith(const UString& name);

		size_t GetIndexSelected();

		TabItem* GetItemSelected();

		void SetIndexSelected(size_t index);

		void SetItemSelected(TabItem* item);

		void SetItemData(size_t index, Widget* value);

		void SetItemData(TabItem* item, Widget* value);

		void ClearItemData(size_t index);

		void ClearItemData(TabItem* item);

		Widget* GetItemData(size_t index);

		Widget* GetItemData(TabItem* item);

		void SetItemName(size_t index, const UString& name);

		void SetItemName(TabItem* item, const UString& name);

		const UString& GetItemName(size_t index);

		const UString& GetItemName(TabItem* item);

		void BeginToItem(size_t index);

		void BeginToItem(TabItem* item);

		void BeginToItemFirst();

		void BeginToItemLast();

		void BeginToItemSelected();

		void SetButtonWidth(size_t index, int width = -1);

		void SetButtonWidth(TabItem* item, int width = -1 );

		int GetButtonWidth(size_t index);

		int GetButtonWidth(TabItem* item);

		void SetButtonDefaultWidth(int value);

		int GetButtonDefaultWidth();

		void SetButtonAutoWidth(bool value);

		bool GetButtonAutoWidth();

		void SetSmoothShow(bool value);

		bool GetSmoothShow();

		virtual void SetProperty(const std::string& key, const std::string& value);
	};
}
